{"version":3,"file":"main.js","mappings":"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","sources":["webpack://mesto-project-ff/webpack/bootstrap","webpack://mesto-project-ff/webpack/runtime/define property getters","webpack://mesto-project-ff/webpack/runtime/hasOwnProperty shorthand","webpack://mesto-project-ff/./src/components/modal.js","webpack://mesto-project-ff/./src/components/api.js","webpack://mesto-project-ff/./src/components/card.js","webpack://mesto-project-ff/./src/components/validation.js","webpack://mesto-project-ff/./src/index.js"],"sourcesContent":["// The require scope\nvar __webpack_require__ = {};\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","export { openModal, closeModal, closeModalByClick };\r\n\r\n// Функция открытия модального окна\r\nfunction openModal(modal) {\r\n  modal.classList.add('popup_is-opened');\r\n  document.addEventListener('keydown', closeModalEscape);\r\n};\r\n\r\n// Функция закрытия на все модальные окна по overlay и х\r\nfunction closeModalByClick(modal) {\r\n  modal.addEventListener('click', evt => {\r\n    if(evt.target.classList.contains('popup_is-opened') || evt.target.classList.contains('popup__close')) {\r\n      closeModal(evt.currentTarget);\r\n    };\r\n  });\r\n}\r\n\r\n// Функция закрытия модального окна\r\nfunction closeModal(modal) {\r\n  modal.classList.remove('popup_is-opened');\r\n  document.removeEventListener('keydown', closeModalEscape);\r\n}\r\n\r\n// Функция закрытия модального окна клавишей Escape\r\nfunction closeModalEscape(evt) {\r\n  if(evt.key === 'Escape') {\r\n    const modal = document.querySelector('.popup_is-opened');\r\n    closeModal(modal);\r\n  };\r\n};","// Конфигурация подключения\r\nconst config = {\r\n  baseUrl: 'https://nomoreparties.co/v1/wff-cohort-18',\r\n  headers: {\r\n    authorization: '91045e6a-03df-4cc6-b344-7f611579ceae',\r\n    'Content-Type': 'application/json'\r\n  }\r\n};\r\n\r\n// Запрос информации о пользователе\r\nexport const getUserInfo = () => {\r\n  return fetch(`${config.baseUrl}/users/me`, {\r\n    method: 'GET',\r\n    headers: config.headers\r\n  })\r\n  .then(res => {\r\n    if(res.ok) {\r\n      return res.json();\r\n    }\r\n    return Promise.reject(`Ошибка получения информации о пользователе: ${res.status}`);\r\n  });\r\n};\r\n\r\n// Обновление информации о пользователе\r\nexport const editUserInfo = (userName, userAbout) => {\r\n  return fetch(`${config.baseUrl}/users/me`, {\r\n    method: 'PATCH',\r\n    headers: config.headers,\r\n    body: JSON.stringify({\r\n      name: userName,\r\n      about: userAbout\r\n    })\r\n  })\r\n  .then(res => {\r\n    if(res.ok) {\r\n      return res.json();\r\n    }\r\n    return Promise.reject(`Ошибка обновления userInfo: ${res.status}`);\r\n  });\r\n};\r\n\r\n// Запрос карточек\r\nexport const getInitialCards = () => {\r\n  return fetch(`${config.baseUrl}/cards`, {\r\n    method: 'GET',\r\n    headers: config.headers\r\n  })\r\n  .then(res => {\r\n    if(res.ok) {\r\n      return res.json();\r\n    }\r\n    return Promise.reject(`Ошибка получения карточек: ${res.status}`);\r\n  });\r\n};\r\n\r\n// Добавление новой карточки\r\nexport const addNewCard = (nameCard, linkCard) => {\r\n  return fetch(`${config.baseUrl}/cards`, {\r\n    method: 'POST',\r\n    headers: config.headers,\r\n    body: JSON.stringify({\r\n      name: nameCard,\r\n      link: linkCard\r\n    })\r\n  })\r\n  .then(res => {\r\n    if(res.ok) {\r\n      return res.json();\r\n    }\r\n    return Promise.reject(`Ошибка обновления добавления карточки: ${res.status}`);\r\n  });\r\n};\r\n\r\n// Удаление карточки\r\nexport const deleteCard = (idCard) => {\r\n  return fetch(`${config.baseUrl}/cards/${idCard}`, {\r\n    method: 'DELETE',\r\n    headers: config.headers\r\n  })\r\n  .then((res) => {\r\n    if(res.ok) {\r\n      return res.json();\r\n    }\r\n    return Promise.reject(`Ошибка удаления карточки: ${res.status}`);\r\n  });\r\n};\r\n\r\n// Постановка лайка\r\nexport const addLike = (idCard) => {\r\n  return fetch(`${config.baseUrl}/cards/likes/${idCard}`, {\r\n    method: 'PUT',\r\n    headers: config.headers\r\n  })\r\n  .then((res) => {\r\n    if(res.ok) {\r\n      return res.json();\r\n    }\r\n    return Promise.reject(`Ошибка постановки лайка: ${res.status}`);\r\n  });\r\n};\r\n\r\n// Удаление лайка\r\nexport const deleteLike = (idCard) => {\r\n  return fetch(`${config.baseUrl}/cards/likes/${idCard}`, {\r\n    method: 'DELETE',\r\n    headers: config.headers\r\n  })\r\n  .then((res) => {\r\n    if(res.ok) {\r\n      return res.json();\r\n    }\r\n    return Promise.reject(`Ошибка удаления лайка: ${res.status}`);\r\n  });\r\n};\r\n\r\n// Изменение аватара\r\nexport const editUserAvatar = (url) => {\r\n  return fetch(`${config.baseUrl}/users/me/avatar`, {\r\n    method: 'PATCH',\r\n    headers: config.headers,\r\n    body: JSON.stringify({\r\n      avatar: url,\r\n    })\r\n  })\r\n  .then(res => {\r\n    if(res.ok) {\r\n      return res.json();\r\n    }\r\n    return Promise.reject(`Ошибка изменения аватара: ${res.status}`);\r\n  });\r\n};\r\n\r\n// Получение mime-типа изображения\r\nexport const getMimeTypeFromUrl = (url) => {\r\n  return fetch(url, {\r\n    method: 'HEAD'\r\n  })\r\n  .then((res) => {\r\n    if(res.ok) {      \r\n      return res;\r\n    }\r\n    return Promise.reject(`Ошибка получения mime-типа: ${res.status}`);\r\n  });\r\n};","export { createCard, removeCard, toggleLike };\r\nimport { cardTemplate } from '../index.js';\r\nimport { deleteCard, addLike, deleteLike } from './api.js';\r\n\r\n// Функция создания карточки\r\nfunction createCard(itemCard, idOwner, confirmCallback, openModalImg, toggleLike) {\r\n  const placeCard = cardTemplate.querySelector('.card').cloneNode(true);\r\n  const cardImage = placeCard.querySelector('.card__image');\r\n  const cardTitle = placeCard.querySelector('.card__title');\r\n  const removeButton = placeCard.querySelector('.card__delete-button');\r\n  const likeButton = placeCard.querySelector('.card__like-button');\r\n  const countLikes = placeCard.querySelector('.card__like-count');\r\n\r\n  // Скрыть кнопку удаления, если карточка не принадлежит пользователю, иначе повесить обработчик\r\n  if(itemCard.owner._id !== idOwner) {\r\n    removeButton.style.display = 'none';\r\n  } else {\r\n    removeButton.addEventListener('click', (evt) => {\r\n      confirmCallback(evt.target.closest('.card'));\r\n    });\r\n  };\r\n\r\n  // Показать иконку поставленного лайка карточки\r\n  itemCard.likes.forEach((like) => {\r\n    if(like._id === idOwner) {\r\n      likeButton.classList.add('card__like-button_is-active');\r\n    };\r\n  });\r\n\r\n  placeCard.id = itemCard._id;\r\n  cardImage.src = itemCard.link;\r\n  cardImage.alt = `Фотография места из региона: ${itemCard.name}`;\r\n  cardTitle.textContent = itemCard.name;\r\n  countLikes.textContent = itemCard.likes.length;\r\n  likeButton.addEventListener('click', (evt) => {\r\n    toggleLike(evt, itemCard._id);\r\n  });\r\n  cardImage.addEventListener('click', () => {\r\n    openModalImg(itemCard);\r\n  });\r\n  return placeCard;\r\n};\r\n\r\n// Удаление карточки\r\nfunction removeCard(cardId) {\r\n  deleteCard(cardId)\r\n  .then((res) => {\r\n    document.getElementById(cardId).remove();\r\n  })\r\n  .catch((err) => {\r\n    console.error(err);\r\n  });\r\n};\r\n\r\n// Постановка/удаление лайка\r\nfunction toggleLike(evt, idCard) {\r\n  const countLikes = evt.target.closest('.card').querySelector('.card__like-count');\r\n  const likeMethod = evt.target.classList.contains('card__like-button_is-active') ? deleteLike : addLike;\r\n  likeMethod(idCard)\r\n    .then((res) => {\r\n      countLikes.textContent = res.likes.length;\r\n      evt.target.classList.toggle('card__like-button_is-active');\r\n    })\r\n    .catch(err => console.error(err));\r\n};","// Функция отображения ошибки\r\nconst showError = (formElement, inputElement, errorMessage, validationConfig) => {\r\n  const errorElement = formElement.querySelector(`.${inputElement.id}-error`);\r\n  inputElement.classList.add(validationConfig.inputErrorClass);\r\n  errorElement.textContent = errorMessage;\r\n  errorElement.classList.add(validationConfig.errorClass);\r\n};\r\n\r\n// Функция скрытия ошибки\r\nconst hideError = (formElement, inputElement, validationConfig) => {\r\n  const errorElement = formElement.querySelector(`.${inputElement.id}-error`);\r\n  inputElement.classList.remove(validationConfig.inputErrorClass);\r\n  errorElement.classList.remove(validationConfig.errorClass);\r\n  errorElement.textContent = '';\r\n};\r\n\r\n// Проверка корректности введенных данных и отображение (скрытие) ошибок\r\nconst checkInputValidity = (formElement, inputElement, validationConfig) => {\r\n  if(inputElement.validity.patternMismatch) {\r\n    inputElement.setCustomValidity(inputElement.dataset.errorMessage);\r\n  } else {\r\n    inputElement.setCustomValidity('');\r\n  };\r\n  if(!inputElement.validity.valid) {\r\n    showError(formElement, inputElement, inputElement.validationMessage, validationConfig);\r\n  } else {\r\n    hideError(formElement, inputElement, validationConfig);\r\n  };\r\n}\r\n\r\n// Обход полей, поиск невалидного поля\r\nconst hasInvalidInput = (inputList) => {\r\n  return inputList.some((inputElement) => {\r\n    return !inputElement.validity.valid;\r\n  });\r\n};\r\n\r\n// Изменение класса кнопки\r\nconst toggleButton = (inputList, buttonElement, validationConfig) => {\r\nif(hasInvalidInput(inputList)) {\r\n    buttonElement.classList.add(validationConfig.inactiveButtonClass);\r\n    buttonElement.disabled = true;\r\n  } else {\r\n    buttonElement.classList.remove(validationConfig.inactiveButtonClass);\r\n    buttonElement.disabled = false;\r\n  };\r\n};\r\n\r\n// Установка обработчиков всем полям формы\r\nconst setEventListeners = (formElement, validationConfig) => {\r\n  const inputList = Array.from(formElement.querySelectorAll(validationConfig.inputSelector));\r\n  const buttonElement = formElement.querySelector(validationConfig.submitButtonSelector);\r\n  toggleButton(inputList, buttonElement, validationConfig);\r\n  inputList.forEach((inputElement) => {\r\n    inputElement.addEventListener('input', function() {\r\n      checkInputValidity(formElement, inputElement, validationConfig);\r\n      toggleButton(inputList, buttonElement, validationConfig);\r\n    });\r\n  });\r\n};\r\n\r\n// Функция включения валидации\r\nexport const enableValidation = (validationConfig) => {  \r\n  const formList = Array.from(document.querySelectorAll(validationConfig.formSelector));\r\n  formList.forEach((formElement) => {\r\n    formElement.addEventListener('submit', function(evt) {\r\n      evt.preventDefault();\r\n    });\r\n    setEventListeners(formElement, validationConfig);\r\n  });\r\n};\r\n\r\n// Функция очистки ошибок валидации\r\nexport const clearValidation = (formElement, validationConfig) => {\r\n  const inputList = Array.from(formElement.querySelectorAll(`.${validationConfig.inputErrorClass}`));\r\n  const popupButton = formElement.querySelector('.popup__button');\r\n\r\n  // Установка атрибута disabled для кнопки\r\n  popupButton.disabled = true;\r\n  popupButton.classList.add(validationConfig.inactiveButtonClass);\r\n\r\n  inputList.forEach((inputElement) => {\r\n    hideError(formElement, inputElement, validationConfig)\r\n    inputElement.value = '';\r\n  });\r\n};","import './pages/index.css';\r\nimport { openModal, closeModal, closeModalByClick } from './components/modal.js';\r\nimport { createCard, removeCard, toggleLike } from  './components/card.js';\r\nimport { enableValidation, clearValidation } from './components/validation.js';\r\nimport { getInitialCards, getUserInfo, editUserInfo, addNewCard, editUserAvatar, getMimeTypeFromUrl } from './components/api.js';\r\nexport { cardTemplate };\r\n\r\n// DOM: Темплейт карточки\r\nconst cardTemplate = document.querySelector('#card-template').content;\r\n\r\n// DOM: Контент, список карточек, профиль\r\nconst content = document.querySelector('.content');\r\nconst placesList = content.querySelector('.places__list');\r\nconst profileName = content.querySelector('.profile__title');\r\nconst profileDescription = content.querySelector('.profile__description');\r\nconst profileAvatar = content.querySelector('.profile__image');\r\n\r\n// DOM: Кнопки\r\nconst buttonProfileModal = document.querySelector('.profile__edit-button');\r\nconst buttonNewCardModal = document.querySelector('.profile__add-button');\r\nconst buttonEditAvatarModal = document.querySelector('.profile__avatar-edit-button');\r\n\r\n// DOM: Модальные окна\r\nconst modalProfileEdit = document.querySelector('.popup_type_edit');\r\nconst modalAddCard = document.querySelector('.popup_type_new-card');\r\nconst modalEditAvatar = document.querySelector('.popup_type_edit-avatar');\r\nconst modalConfirmRemove = document.querySelector('.popup_type_confirm-remove');\r\nconst openModals = document.querySelectorAll('.popup');\r\n\r\n// DOM: Модальное окно с изображением\r\nconst modalCard = document.querySelector('.popup_type_image');\r\nconst modalImg = modalCard.querySelector('.popup__image');\r\nconst modalImgCaption = modalCard.querySelector('.popup__caption');\r\n\r\n// DOM: Форма профиля\r\nconst formProfileEdit = modalProfileEdit.querySelector('.popup__form');\r\nconst inputProfileName = formProfileEdit.querySelector('.popup__input_type_name');\r\nconst inputProfileDescription = formProfileEdit.querySelector('.popup__input_type_description');\r\nconst buttonProfileEdit = formProfileEdit.querySelector('.popup__button');\r\n\r\n// DOM: Форма добавления карточки\r\nconst formAddCard = modalAddCard.querySelector('.popup__form');\r\nconst inputCardName = formAddCard.querySelector('.popup__input_type_card-name');\r\nconst inputCardUrl = formAddCard.querySelector('.popup__input_type_url');\r\nconst buttonAddCard = formAddCard.querySelector('.popup__button');\r\n\r\n// DOM: Форма редактирования аватара\r\nconst formEditAvatar = modalEditAvatar.querySelector('.popup__form');\r\nconst inputEditAvatar = formEditAvatar.querySelector('.popup__input_type_avatar');\r\nconst buttonEditAvatar = formEditAvatar.querySelector('.popup__button');\r\n\r\n// DOM: Форма подтверждения удаления карточки\r\nconst formConfirmRemove = modalConfirmRemove.querySelector('.popup__form');\r\n\r\n// Объект с настройками валидации форм\r\nconst validationConfig = {\r\n  formSelector: '.popup__form',\r\n  inputSelector: '.popup__input',\r\n  submitButtonSelector: '.popup__button',\r\n  inactiveButtonClass: 'popup__button_disabled',\r\n  inputErrorClass: 'popup__input_type_error',\r\n  errorClass: 'popup__error_visible'\r\n};\r\n\r\n// Допустимые mime-типы для аватара профиля\r\nconst validMimeTypes = [\r\n  'image/jpeg',\r\n  'image/png',\r\n  'image/gif'\r\n];\r\n\r\n// Функция редактирование профиля\r\nfunction editProfileFormSubmit(evt) {\r\n  evt.preventDefault();\r\n  buttonProfileEdit.textContent = 'Сохранение...';\r\n  editUserInfo(inputProfileName.value, inputProfileDescription.value)\r\n    .then((res) => {\r\n      profileName.textContent = res.name;\r\n      profileDescription.textContent = res.about;\r\n    })\r\n    .catch((err) => {\r\n      console.error(err);\r\n    })\r\n    .finally(() => {\r\n      buttonProfileEdit.textContent = 'Сохранить';\r\n      closeModal(modalProfileEdit);\r\n    });\r\n};\r\n\r\n// Функция добавление карточки\r\nfunction addCardFormSubmit(evt) {\r\n  evt.preventDefault();\r\n  buttonAddCard.textContent = 'Сохранение...';\r\n  addNewCard(inputCardName.value, inputCardUrl.value)\r\n    .then((itemCard) => {\r\n      const idOwner = itemCard.owner._id;\r\n      const newCard = createCard(itemCard, idOwner, openModalConfirmRemove, openModalImg, toggleLike);\r\n      placesList.prepend(newCard);\r\n      formAddCard.reset();\r\n    })\r\n    .catch((err) => {\r\n      console.error(err);\r\n    })\r\n    .finally(() => {\r\n      buttonAddCard.textContent = 'Создать';\r\n      closeModal(modalAddCard);\r\n    });\r\n}\r\n\r\n// Функция изменения аватара с предварительной проверкой mime-типа\r\nfunction editAvatarFormSubmit(evt) {\r\n  evt.preventDefault();\r\n  buttonEditAvatar.textContent = 'Сохранение...';\r\n\r\n  // Проверка mime-типа изображения\r\n  getMimeTypeFromUrl(inputEditAvatar.value)\r\n    .then((res) => {\r\n      const hasMimeType = validMimeTypes.some(type => {\r\n        return type === res.headers.get(\"content-type\");\r\n      });\r\n      if(hasMimeType) {\r\n        return res.url;\r\n      };\r\n      return Promise.reject(`Недопустимый mime-тип файла: ${res.headers.get(\"content-type\")}. Разрешены: ${validMimeTypes.join(', ')}`);\r\n    })\r\n    // Изменение аватара\r\n    .then((url) => editUserAvatar(url))\r\n    .then((res) => {\r\n      profileAvatar.src = res.avatar;\r\n    })\r\n    .catch((err) => {\r\n      console.error(err);\r\n    })\r\n    .finally(() => {\r\n      buttonEditAvatar.textContent = 'Сохранить';\r\n      closeModal(modalEditAvatar);\r\n    });\r\n};\r\n\r\n// Функция открытия окна подтверждения удаления карточки\r\nfunction openModalConfirmRemove(cardItem) {\r\n  formConfirmRemove.dataset.idCard = cardItem.id;\r\n  openModal(modalConfirmRemove);\r\n};\r\n\r\n// Функция открытия карточки изображения\r\nfunction openModalImg(dataCard) {\r\n  modalImg.src = dataCard.link;\r\n  modalImg.alt = `Фотография места из региона: ${dataCard.name}`;\r\n  modalImgCaption.textContent = dataCard.name;\r\n  openModal(modalCard);\r\n};\r\n\r\n// Обработчик открытия окна редактирования профиля\r\nbuttonProfileModal.addEventListener('click', evt => {\r\n  clearValidation(formProfileEdit, validationConfig);\r\n  inputProfileName.value = profileName.textContent;\r\n  inputProfileDescription.value = profileDescription.textContent;\r\n  openModal(modalProfileEdit);\r\n});\r\n\r\n// Обработчик открытия окна добавления карточки\r\nbuttonNewCardModal.addEventListener('click', evt =>  {\r\n  clearValidation(formAddCard, validationConfig);\r\n  openModal(modalAddCard);\r\n});\r\n\r\n// Обработчик открытия окна редактирования аватара\r\nbuttonEditAvatarModal.addEventListener('click', evt => {\r\n  clearValidation(formEditAvatar, validationConfig);\r\n  inputEditAvatar.value = profileAvatar.src;\r\n  openModal(modalEditAvatar);\r\n});\r\n\r\n// Обработчик закрытия на все модальные окна по overlay и х\r\nArray.from(openModals).forEach(modal => {\r\n  closeModalByClick(modal);\r\n});\r\n\r\n// Обработчик формы редактирование профиля\r\nformProfileEdit.addEventListener('submit', editProfileFormSubmit);\r\n\r\n// Обработчик формы добавление карточки\r\nformAddCard.addEventListener('submit', addCardFormSubmit);\r\n\r\n// Обработчик формы изменения аватара\r\nformEditAvatar.addEventListener('submit', editAvatarFormSubmit);\r\n\r\n// Обработчик формы подтверждение удаления карточки\r\nformConfirmRemove.addEventListener('submit', (evt) => {\r\n  removeCard(evt.target.dataset.idCard);\r\n  closeModal(modalConfirmRemove);\r\n});\r\n\r\n// Включение валидацию форм\r\nenableValidation(validationConfig);\r\n\r\n// Получение карточек и информации о пользователе с сервера\r\nPromise.all([getUserInfo(), getInitialCards()])\r\n  .then(([userInfo, initialCards]) => {\r\n    // Вывод информации о пользователе\r\n    profileName.textContent = userInfo.name;\r\n    profileDescription.textContent = userInfo.about;\r\n    profileAvatar.src = userInfo.avatar;\r\n\r\n    // Вывод карточек\r\n    const idOwner = userInfo._id;\r\n    initialCards.forEach(function(itemCard) {\r\n      placesList.append(createCard(itemCard, idOwner, openModalConfirmRemove, openModalImg, toggleLike));\r\n    });\r\n  })\r\n  .catch((err) => {\r\n    console.error(err);\r\n  });"],"names":["__webpack_require__","exports","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","openModal","modal","classList","add","document","addEventListener","closeModalEscape","closeModal","remove","removeEventListener","evt","querySelector","config","baseUrl","headers","authorization","addLike","idCard","fetch","concat","method","then","res","ok","json","Promise","reject","status","deleteLike","createCard","itemCard","idOwner","confirmCallback","openModalImg","toggleLike","placeCard","cardTemplate","cloneNode","cardImage","cardTitle","removeButton","likeButton","countLikes","owner","_id","style","display","target","closest","likes","forEach","like","id","src","link","alt","name","textContent","length","contains","toggle","catch","err","console","error","hideError","formElement","inputElement","validationConfig","errorElement","inputErrorClass","errorClass","toggleButton","inputList","buttonElement","some","validity","valid","hasInvalidInput","inactiveButtonClass","disabled","clearValidation","Array","from","querySelectorAll","popupButton","value","content","placesList","profileName","profileDescription","profileAvatar","buttonProfileModal","buttonNewCardModal","buttonEditAvatarModal","modalProfileEdit","modalAddCard","modalEditAvatar","modalConfirmRemove","openModals","modalCard","modalImg","modalImgCaption","formProfileEdit","inputProfileName","inputProfileDescription","buttonProfileEdit","formAddCard","inputCardName","inputCardUrl","buttonAddCard","formEditAvatar","inputEditAvatar","buttonEditAvatar","formConfirmRemove","formSelector","inputSelector","submitButtonSelector","validMimeTypes","openModalConfirmRemove","cardItem","dataset","dataCard","currentTarget","closeModalByClick","userName","userAbout","preventDefault","body","JSON","stringify","about","finally","nameCard","linkCard","newCard","prepend","reset","url","type","join","avatar","editUserAvatar","cardId","getElementById","patternMismatch","setCustomValidity","errorMessage","showError","validationMessage","checkInputValidity","setEventListeners","enableValidation","all","_ref","_ref2","userInfo","initialCards","append"],"sourceRoot":""}