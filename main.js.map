{"version":3,"file":"main.js","mappings":"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","sources":["webpack://mesto-project-ff/webpack/bootstrap","webpack://mesto-project-ff/webpack/runtime/define property getters","webpack://mesto-project-ff/webpack/runtime/hasOwnProperty shorthand","webpack://mesto-project-ff/./src/components/modal.js","webpack://mesto-project-ff/./src/components/api.js","webpack://mesto-project-ff/./src/components/card.js","webpack://mesto-project-ff/./src/components/validation.js","webpack://mesto-project-ff/./src/index.js"],"sourcesContent":["// The require scope\nvar __webpack_require__ = {};\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","export { openModal, closeModal, closeModalByClick };\r\n\r\n// Функция открытия модального окна\r\nfunction openModal(modal) {\r\n  modal.classList.add('popup_is-opened');\r\n  document.addEventListener('keydown', closeModalEscape);\r\n};\r\n\r\n// Функция закрытия на все модальные окна по overlay и х\r\nfunction closeModalByClick(modal) {\r\n  modal.addEventListener('click', evt => {\r\n    if(evt.target.classList.contains('popup_is-opened') || evt.target.classList.contains('popup__close')) {\r\n      closeModal(evt.currentTarget);\r\n    };\r\n  });\r\n}\r\n\r\n// Функция закрытия модального окна\r\nfunction closeModal(modal) {\r\n  modal.classList.remove('popup_is-opened');\r\n  document.removeEventListener('keydown', closeModalEscape);\r\n}\r\n\r\n// Функция закрытия модального окна клавишей Escape\r\nfunction closeModalEscape(evt) {\r\n  if(evt.key === 'Escape') {\r\n    const modal = document.querySelector('.popup_is-opened');\r\n    closeModal(modal);\r\n  };\r\n};","// Конфигурация подключения\r\nconst config = {\r\n  baseUrl: 'https://nomoreparties.co/v1/wff-cohort-18',\r\n  headers: {\r\n    authorization: '91045e6a-03df-4cc6-b344-7f611579ceae',\r\n    'Content-Type': 'application/json'\r\n  }\r\n};\r\n\r\n// Запрос информации о пользователе\r\nexport const getUserInfo = () => {\r\n  return fetch(`${config.baseUrl}/users/me`, {\r\n    method: 'GET',\r\n    headers: config.headers\r\n  })\r\n  .then(res => {\r\n    if(res.ok) {\r\n      return res.json();\r\n    }\r\n    return Promise.reject(`Ошибка получения информации о пользователе: ${res.status}`);\r\n  });\r\n};\r\n\r\n// Обновление информации о пользователе\r\nexport const editUserInfo = (userName, userAbout) => {\r\n  return fetch(`${config.baseUrl}/users/me`, {\r\n    method: 'PATCH',\r\n    headers: config.headers,\r\n    body: JSON.stringify({\r\n      name: userName,\r\n      about: userAbout\r\n    })\r\n  })\r\n  .then(res => {\r\n    if(res.ok) {\r\n      return res.json();\r\n    }\r\n    return Promise.reject(`Ошибка обновления userInfo: ${res.status}`);\r\n  });\r\n};\r\n\r\n// Запрос карточек\r\nexport const getInitialCards = () => {\r\n  return fetch(`${config.baseUrl}/cards`, {\r\n    method: 'GET',\r\n    headers: config.headers\r\n  })\r\n  .then(res => {\r\n    if(res.ok) {\r\n      return res.json();\r\n    }\r\n    return Promise.reject(`Ошибка получения карточек: ${res.status}`);\r\n  });\r\n};\r\n\r\n// Добавление новой карточки\r\nexport const addNewCard = (nameCard, linkCard) => {\r\n  return fetch(`${config.baseUrl}/cards`, {\r\n    method: 'POST',\r\n    headers: config.headers,\r\n    body: JSON.stringify({\r\n      name: nameCard,\r\n      link: linkCard\r\n    })\r\n  })\r\n  .then(res => {\r\n    if(res.ok) {\r\n      return res.json();\r\n    }\r\n    return Promise.reject(`Ошибка обновления добавления карточки: ${res.status}`);\r\n  });\r\n};\r\n\r\n// Удаление карточки\r\nexport const deleteCard = (idCard) => {\r\n  return fetch(`${config.baseUrl}/cards/${idCard}`, {\r\n    method: 'DELETE',\r\n    headers: config.headers\r\n  })\r\n  .then((res) => {\r\n    if(res.ok) {\r\n      return res.json();\r\n    }\r\n    return Promise.reject(`Ошибка удаления карточки: ${res.status}`);\r\n  });\r\n};\r\n\r\n// Постановка лайка\r\nexport const addLike = (idCard) => {\r\n  return fetch(`${config.baseUrl}/cards/likes/${idCard}`, {\r\n    method: 'PUT',\r\n    headers: config.headers\r\n  })\r\n  .then((res) => {\r\n    if(res.ok) {\r\n      return res.json();\r\n    }\r\n    return Promise.reject(`Ошибка постановки лайка: ${res.status}`);\r\n  });\r\n};\r\n\r\n// Удаление лайка\r\nexport const deleteLike = (idCard) => {\r\n  return fetch(`${config.baseUrl}/cards/likes/${idCard}`, {\r\n    method: 'DELETE',\r\n    headers: config.headers\r\n  })\r\n  .then((res) => {\r\n    if(res.ok) {\r\n      return res.json();\r\n    }\r\n    return Promise.reject(`Ошибка удаления лайка: ${res.status}`);\r\n  });\r\n};\r\n\r\n// Изменение аватара\r\nexport const editUserAvatar = (url) => {\r\n  return fetch(`${config.baseUrl}/users/me/avatar`, {\r\n    method: 'PATCH',\r\n    headers: config.headers,\r\n    body: JSON.stringify({\r\n      avatar: url,\r\n    })\r\n  })\r\n  .then(res => {\r\n    if(res.ok) {\r\n      return res.json();\r\n    }\r\n    return Promise.reject(`Ошибка изменения аватара: ${res.status}`);\r\n  });\r\n};\r\n\r\n// Получение mime-типа изображения\r\nexport const getMimeTypeFromUrl = (url) => {\r\n  return fetch(url, {\r\n    method: 'HEAD'\r\n  })\r\n  .then((res) => {\r\n    if(res.ok) {      \r\n      return res;\r\n    }\r\n    return Promise.reject(`Ошибка получения mime-типа: ${res.status}`);\r\n  });\r\n};","export { createCard, removeCard, toggleLike };\r\nimport { cardTemplate } from '../index.js';\r\nimport { deleteCard, addLike, deleteLike } from './api.js';\r\n\r\n// Функция создания карточки\r\nfunction createCard(itemCard, idOwner, confirmCallback, openModalImg, toggleLike) {\r\n  const placeCard = cardTemplate.querySelector('.card').cloneNode(true);\r\n  const cardImage = placeCard.querySelector('.card__image');\r\n  const cardTitle = placeCard.querySelector('.card__title');\r\n  const removeButton = placeCard.querySelector('.card__delete-button');\r\n  const likeButton = placeCard.querySelector('.card__like-button');\r\n  const countLikes = placeCard.querySelector('.card__like-count');\r\n\r\n  // Скрыть кнопку удаления, если карточка не принадлежит пользователю\r\n  if(itemCard.owner._id !== idOwner) {\r\n    removeButton.style.display = 'none';\r\n  }\r\n\r\n  // Показать иконку поставленного лайка карточки\r\n  itemCard.likes.forEach((like) => {\r\n    if(like._id === idOwner) {\r\n      likeButton.classList.add('card__like-button_is-active');\r\n    };\r\n  });\r\n\r\n  placeCard.id = itemCard._id;\r\n  cardImage.src = itemCard.link;\r\n  cardImage.alt = `Фотография места из региона: ${itemCard.name}`;\r\n  cardTitle.textContent = itemCard.name;\r\n  countLikes.textContent = itemCard.likes.length;\r\n  likeButton.addEventListener('click', (evt) => {\r\n    toggleLike(evt, itemCard._id);\r\n  });\r\n  removeButton.addEventListener('click', (evt) => {\r\n    confirmCallback(evt.target.closest('.card'));\r\n  });\r\n  cardImage.addEventListener('click', () => {\r\n    openModalImg(itemCard);\r\n  });  \r\n  return placeCard;\r\n};\r\n\r\n// Удаление карточки\r\nfunction removeCard(cardId) {\r\n  deleteCard(cardId)\r\n  .then((res) => {\r\n    document.getElementById(cardId).remove();\r\n  })\r\n  .catch((err) => {\r\n    console.error(err);\r\n  });\r\n};\r\n\r\n// Постановка/удаление лайка\r\nfunction toggleLike(evt, idCard) {\r\n  const countLikes = evt.target.closest('.card').querySelector('.card__like-count');\r\n  if(!evt.target.classList.contains('card__like-button_is-active')) {\r\n    addLike(idCard)\r\n    .then((res) => {\r\n      countLikes.textContent = res.likes.length;\r\n      evt.target.classList.toggle('card__like-button_is-active');\r\n    })\r\n    .catch((err) => {\r\n      console.error(err);\r\n    });\r\n  } else {\r\n    deleteLike(idCard)\r\n    .then((res) => {\r\n      countLikes.textContent = res.likes.length;\r\n      evt.target.classList.toggle('card__like-button_is-active');\r\n    })\r\n    .catch((err) => {\r\n      console.error(err);\r\n    });\r\n  };\r\n};","// Функция отображения ошибки\r\nconst showError = (formElement, inputElement, errorMessage, validationConfig) => {\r\n  const errorElement = formElement.querySelector(`.${inputElement.id}-error`);\r\n  inputElement.classList.add(validationConfig.inputErrorClass);\r\n  errorElement.textContent = errorMessage;\r\n  errorElement.classList.add(validationConfig.errorClass);\r\n};\r\n\r\n// Функция скрытия ошибки\r\nconst hideError = (formElement, inputElement, validationConfig) => {\r\n  const errorElement = formElement.querySelector(`.${inputElement.id}-error`);\r\n  inputElement.classList.remove(validationConfig.inputErrorClass);\r\n  errorElement.classList.remove(validationConfig.errorClass);\r\n  errorElement.textContent = '';\r\n};\r\n\r\n// Проверка корректности введенных данных и отображение (скрытие) ошибок\r\nconst checkInputValidity = (formElement, inputElement, validationConfig) => {\r\n  if(inputElement.validity.patternMismatch) {\r\n    inputElement.setCustomValidity(inputElement.dataset.errorMessage);\r\n  } else {\r\n    inputElement.setCustomValidity('');\r\n  };\r\n  if(!inputElement.validity.valid) {\r\n    showError(formElement, inputElement, inputElement.validationMessage, validationConfig);\r\n  } else {\r\n    hideError(formElement, inputElement, validationConfig);\r\n  };\r\n}\r\n\r\n// Обход полей, поиск невалидного поля\r\nconst hasInvalidInput = (inputList) => {\r\n  return inputList.some((inputElement) => {\r\n    return !inputElement.validity.valid;\r\n  });\r\n};\r\n\r\n// Изменение класса кнопки\r\nconst toggleButton = (inputList, buttonElement, validationConfig) => {\r\nif(hasInvalidInput(inputList)) {\r\n    buttonElement.classList.add(validationConfig.inactiveButtonClass);\r\n  } else {\r\n    buttonElement.classList.remove(validationConfig.inactiveButtonClass);\r\n  };\r\n};\r\n\r\n// Установка обработчиков всем полям формы\r\nconst setEventListeners = (formElement, validationConfig) => {\r\n  const inputList = Array.from(formElement.querySelectorAll(validationConfig.inputSelector));\r\n  const buttonElement = formElement.querySelector(validationConfig.submitButtonSelector);\r\n  toggleButton(inputList, buttonElement, validationConfig);\r\n  inputList.forEach((inputElement) => {\r\n    inputElement.addEventListener('input', function() {\r\n      checkInputValidity(formElement, inputElement, validationConfig);\r\n      toggleButton(inputList, buttonElement, validationConfig);\r\n    });\r\n  });\r\n};\r\n\r\n// Функция включения валидации\r\nexport const enableValidation = (validationConfig) => {  \r\n  const formList = Array.from(document.querySelectorAll(validationConfig.formSelector));\r\n  formList.forEach((formElement) => {\r\n    formElement.addEventListener('submit', function(evt) {\r\n      evt.preventDefault();\r\n    });\r\n    setEventListeners(formElement, validationConfig);\r\n  });\r\n};\r\n\r\n// Функция очистки ошибок валидации\r\nexport const clearValidation = (formElement, validationConfig) => {\r\n  let inputList = Array.from(formElement.querySelectorAll(`.${validationConfig.inputErrorClass}`));\r\n  inputList.forEach((inputElement) => {\r\n    const errorElement = formElement.querySelector(`.${inputElement.id}-error`);\r\n    inputElement.classList.remove(validationConfig.inputErrorClass);\r\n    inputElement.value = '';\r\n    errorElement.classList.remove(validationConfig.errorClass);\r\n    errorElement.textContent = '';\r\n  });\r\n};","import './pages/index.css';\r\nimport { openModal, closeModal, closeModalByClick } from './components/modal.js';\r\nimport { createCard, removeCard, toggleLike } from  './components/card.js';\r\nimport { enableValidation, clearValidation } from './components/validation.js';\r\nimport { getInitialCards, getUserInfo, editUserInfo, addNewCard, editUserAvatar, getMimeTypeFromUrl } from './components/api.js';\r\nexport { cardTemplate };\r\n\r\n// DOM: Темплейт карточки\r\nconst cardTemplate = document.querySelector('#card-template').content;\r\n\r\n// DOM: Контент, список карточек, профиль\r\nconst content = document.querySelector('.content');\r\nconst placesList = content.querySelector('.places__list');\r\nconst profileName = content.querySelector('.profile__title');\r\nconst profileDescription = content.querySelector('.profile__description');\r\nconst profileAvatar = content.querySelector('.profile__image');\r\n\r\n// DOM: Кнопки\r\nconst buttonProfileModal = document.querySelector('.profile__edit-button');\r\nconst buttonNewCardModal = document.querySelector('.profile__add-button');\r\nconst buttonEditAvatarModal = document.querySelector('.profile__avatar-edit-button');\r\n\r\n// DOM: Модальные окна\r\nconst modalProfileEdit = document.querySelector('.popup_type_edit');\r\nconst modalAddCard = document.querySelector('.popup_type_new-card');\r\nconst modalEditAvatar = document.querySelector('.popup_type_edit-avatar');\r\nconst modalConfirmRemove = document.querySelector('.popup_type_confirm-remove');\r\nconst openModals = document.querySelectorAll('.popup');\r\n\r\n// DOM: Модальное окно с изображением\r\nconst modalCard = document.querySelector('.popup_type_image');\r\nconst modalImg = modalCard.querySelector('.popup__image');\r\nconst modalImgCaption = modalCard.querySelector('.popup__caption');\r\n\r\n// DOM: Форма профиля\r\nconst formProfileEdit = modalProfileEdit.querySelector('.popup__form');\r\nconst inputProfileName = formProfileEdit.querySelector('.popup__input_type_name');\r\nconst inputProfileDescription = formProfileEdit.querySelector('.popup__input_type_description');\r\nconst buttonProfileEdit = formProfileEdit.querySelector('.popup__button');\r\n\r\n// DOM: Форма добавления карточки\r\nconst formAddCard = modalAddCard.querySelector('.popup__form');\r\nconst inputCardName = formAddCard.querySelector('.popup__input_type_card-name');\r\nconst inputCardUrl = formAddCard.querySelector('.popup__input_type_url');\r\nconst buttonAddCard = formAddCard.querySelector('.popup__button');\r\n\r\n// DOM: Форма редактирования аватара\r\nconst formEditAvatar = modalEditAvatar.querySelector('.popup__form');\r\nconst inputEditAvatar = formEditAvatar.querySelector('.popup__input_type_avatar');\r\nconst buttonEditAvatar = formEditAvatar.querySelector('.popup__button');\r\n\r\n// DOM: Форма подтверждения удаления карточки\r\nconst formConfirmRemove = modalConfirmRemove.querySelector('.popup__form');\r\nconst buttonConfirmRemove = formConfirmRemove.querySelector('.popup__button');\r\n\r\n// Объект с настройками валидации форм\r\nconst validationConfig = {\r\n  formSelector: '.popup__form',\r\n  inputSelector: '.popup__input',\r\n  submitButtonSelector: '.popup__button',\r\n  inactiveButtonClass: 'popup__button_disabled',\r\n  inputErrorClass: 'popup__input_type_error',\r\n  errorClass: 'popup__error_visible'\r\n};\r\n\r\n// Допустимые mime-типы для аватара профиля\r\nconst validMimeTypes = [\r\n  'image/jpeg',\r\n  'image/png',\r\n  'image/gif'\r\n];\r\n\r\n// Функция редактирование профиля\r\nfunction editProfileFormSubmit(evt) {\r\n  evt.preventDefault();\r\n  buttonProfileEdit.textContent = 'Сохранение...';\r\n  editUserInfo(inputProfileName.value, inputProfileDescription.value)\r\n    .then((res) => {\r\n      profileName.textContent = res.name;\r\n      profileDescription.textContent = res.about;\r\n    })\r\n    .catch((err) => {\r\n      console.error(err);\r\n    })\r\n    .finally(() => {\r\n      buttonProfileEdit.textContent = 'Сохранить';\r\n    });  \r\n  closeModal(modalProfileEdit);\r\n};\r\n\r\n// Функция добавление карточки\r\nfunction addCardFormSubmit(evt) {\r\n  evt.preventDefault();\r\n  buttonAddCard.textContent = 'Сохранение...';\r\n  addNewCard(inputCardName.value, inputCardUrl.value)\r\n    .then((itemCard) => {\r\n      const idOwner = itemCard.owner._id;\r\n      const newCard = createCard(itemCard, idOwner, openModalConfirmRemove, openModalImg, toggleLike);\r\n      placesList.prepend(newCard);\r\n      formAddCard.reset();\r\n      buttonAddCard.classList.add(validationConfig.inactiveButtonClass);\r\n    })\r\n    .catch((err) => {\r\n      console.error(err);\r\n    })\r\n    .finally(() => {\r\n      buttonAddCard.textContent = 'Создать';\r\n    });  \r\n  closeModal(modalAddCard);\r\n}\r\n\r\n// Функция изменения аватара с предварительной проверкой mime-типа\r\nfunction editAvatarFormSubmit(evt) {\r\n  evt.preventDefault();\r\n  buttonEditAvatar.textContent = 'Сохранение...';\r\n\r\n  // Проверка mime-типа изображения\r\n  getMimeTypeFromUrl(inputEditAvatar.value)\r\n    .then((res) => {\r\n      const hasMimeType = validMimeTypes.some(type => {\r\n        return type === res.headers.get(\"content-type\");\r\n      });\r\n      if(hasMimeType) {\r\n        return res.url;\r\n      };\r\n      return Promise.reject(`Недопустимый mime-тип файла: ${res.headers.get(\"content-type\")}. Разрешены: ${validMimeTypes.join(', ')}`);  \r\n    })\r\n    // Изменение аватара\r\n    .then((url) => editUserAvatar(url))\r\n    .then((res) => {\r\n      profileAvatar.src = res.avatar;\r\n    })\r\n    .catch((err) => {\r\n      console.error(err);\r\n    })\r\n    .finally(() => {\r\n      buttonEditAvatar.textContent = 'Сохранить';\r\n    });\r\n  closeModal(modalEditAvatar);\r\n};\r\n\r\n// Функция открытия окна подтверждения удаления карточки\r\nfunction openModalConfirmRemove(cardItem) {\r\n  formConfirmRemove.dataset.idCard = cardItem.id;\r\n  openModal(modalConfirmRemove);\r\n};\r\n\r\n// Функция открытия карточки изображения\r\nfunction openModalImg(dataCard) {\r\n  modalImg.src = dataCard.link;\r\n  modalImg.alt = `Фотография места из региона: ${dataCard.name}`;\r\n  modalImgCaption.textContent = dataCard.name;\r\n  openModal(modalCard);\r\n};\r\n\r\n// Обработчик открытия окна редактирования профиля\r\nbuttonProfileModal.addEventListener('click', evt => {\r\n  clearValidation(formProfileEdit, validationConfig);\r\n  inputProfileName.value = profileName.textContent;\r\n  inputProfileDescription.value = profileDescription.textContent;\r\n  openModal(modalProfileEdit);\r\n});\r\n\r\n// Обработчик открытия окна добавления карточки\r\nbuttonNewCardModal.addEventListener('click', evt =>  {\r\n  clearValidation(formAddCard, validationConfig);\r\n  openModal(modalAddCard);\r\n});\r\n\r\n// Обработчик открытия окна редактирования аватара\r\nbuttonEditAvatarModal.addEventListener('click', evt => {\r\n  clearValidation(formEditAvatar, validationConfig);\r\n  inputEditAvatar.value = profileAvatar.src;\r\n  openModal(modalEditAvatar);\r\n});\r\n\r\n// Обработчик закрытия на все модальные окна по overlay и х\r\nArray.from(openModals).forEach(modal => {\r\n  closeModalByClick(modal);\r\n});\r\n\r\n// Обработчик формы редактирование профиля\r\nformProfileEdit.addEventListener('submit', editProfileFormSubmit);\r\n\r\n// Обработчик формы добавление карточки\r\nformAddCard.addEventListener('submit', addCardFormSubmit);\r\n\r\n// Обработчик формы изменения аватара\r\nformEditAvatar.addEventListener('submit', editAvatarFormSubmit);\r\n\r\n// Обработчик формы подтверждение удаления карточки\r\nformConfirmRemove.addEventListener('submit', (evt) => {\r\n  removeCard(evt.target.dataset.idCard);\r\n  closeModal(modalConfirmRemove);\r\n});\r\n\r\n// Включение валидацию форм\r\nenableValidation(validationConfig);\r\n\r\n// Получение карточек и информации о пользователе с сервера\r\nPromise.all([getUserInfo(), getInitialCards()])\r\n  .then(([userInfo, initialCards]) => {\r\n    // Вывод информации о пользователе\r\n    profileName.textContent = userInfo.name;\r\n    profileDescription.textContent = userInfo.about;\r\n    profileAvatar.src = userInfo.avatar;\r\n\r\n    // Вывод карточек\r\n    const idOwner = userInfo._id;\r\n    initialCards.forEach(function(itemCard) {\r\n      placesList.append(createCard(itemCard, idOwner, openModalConfirmRemove, openModalImg, toggleLike));\r\n    });\r\n  })\r\n  .catch((err) => {\r\n    console.error(err);\r\n  });"],"names":["__webpack_require__","exports","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","openModal","modal","classList","add","document","addEventListener","closeModalEscape","closeModal","remove","removeEventListener","evt","querySelector","config","baseUrl","headers","authorization","createCard","itemCard","idOwner","confirmCallback","openModalImg","toggleLike","placeCard","cardTemplate","cloneNode","cardImage","cardTitle","removeButton","likeButton","countLikes","owner","_id","style","display","likes","forEach","like","id","src","link","alt","concat","name","textContent","length","target","closest","idCard","contains","fetch","method","then","res","ok","json","Promise","reject","status","deleteLike","toggle","catch","err","console","error","addLike","toggleButton","inputList","buttonElement","validationConfig","some","inputElement","validity","valid","hasInvalidInput","inactiveButtonClass","clearValidation","formElement","Array","from","querySelectorAll","inputErrorClass","errorElement","value","errorClass","content","placesList","profileName","profileDescription","profileAvatar","buttonProfileModal","buttonNewCardModal","buttonEditAvatarModal","modalProfileEdit","modalAddCard","modalEditAvatar","modalConfirmRemove","openModals","modalCard","modalImg","modalImgCaption","formProfileEdit","inputProfileName","inputProfileDescription","buttonProfileEdit","formAddCard","inputCardName","inputCardUrl","buttonAddCard","formEditAvatar","inputEditAvatar","buttonEditAvatar","formConfirmRemove","formSelector","inputSelector","submitButtonSelector","validMimeTypes","openModalConfirmRemove","cardItem","dataset","dataCard","currentTarget","closeModalByClick","userName","userAbout","preventDefault","body","JSON","stringify","about","finally","nameCard","linkCard","newCard","prepend","reset","url","type","join","avatar","editUserAvatar","cardId","getElementById","patternMismatch","setCustomValidity","errorMessage","hideError","showError","validationMessage","checkInputValidity","setEventListeners","enableValidation","all","_ref","_ref2","userInfo","initialCards","append"],"sourceRoot":""}